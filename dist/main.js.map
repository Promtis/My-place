{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/timer.js","webpack://my-webpack-project/./src/token.js","webpack://my-webpack-project/./src/index.js"],"sourcesContent":["const createTimer = elementTime => {\r\n    let interval = null;\r\n    let seconds = 0;\r\n\r\n    const start = () => {\r\n      //if (!interval){\r\n      clearInterval(interval);\r\n      interval = null;\r\n      seconds = 0;\r\n      elementTime.innerText = 0; \r\n      interval = setInterval(tick, 1000);\r\n    };\r\n\r\n    const stop = () => {\r\n      clearInterval(interval);\r\n      interval = null;\r\n    };\r\n\r\n    const tick = () => {\r\n      seconds++;\r\n      elementTime.innerText = seconds;\r\n    };\r\n\r\n    const getSeconds = () => seconds;\r\n\r\n    return {\r\n      start,\r\n      stop,\r\n      getSeconds,\r\n    }\r\n  };\r\n  export {createTimer};\r\n","\r\nconst protoToken = {\r\n    value: 0,\r\n    element: null,\r\n\r\n    setValue(value) {\r\n        this.value = `#${value.toString(16).padStart(6,\"0\")}`;\r\n    },\r\n\r\n    setMatched() {\r\n        this.element.style.backgroundColor = this.value;\r\n        this.element.style.borderColor = '#66ff33';\r\n    },\r\n    setNormal(){\r\n        this.element.style.backgroundColor = '#000000';\r\n        this.element.style.borderColor = '#000000';\r\n    },\r\n    setChosen(){\r\n        this.element.style.backgroundColor = this.value;\r\n        this.element.style.borderColor = '#000000';\r\n    },\r\n    setStarting(){\r\n        this.element.style.backgroundColor = this.value;\r\n        this.element.style.borderColor = this.value;\r\n    }\r\n    \r\n};\r\n\r\nexport const createToken = (onclick) =>  {\r\n    const token = Object.create(protoToken);\r\n    const element = document.createElement('div');\r\n\r\n    token.element = element;\r\n    element.className = 'starting'\r\n    element.onclick = () => {\r\n        onclick(token);\r\n    }\r\n    return token;\r\n}\r\n\r\n","import { createTimer } from './timer';\r\nimport { createToken } from './token';\r\n\r\nlet elementTotal;\r\nlet moves = 0;\r\nlet elementTime;\r\nlet tokenSelected = null;\r\nlet pairCount = 10;\r\nlet elementStart;\r\n\r\nconst Tokens = [];\r\nconst container = document.getElementById('container');\r\nconst stepColor = Math.floor(16777164 / pairCount);\r\n\r\nconst init = () => {\r\n    console.log('onload')\r\n    elementTotal = document.getElementById(`moves`);\r\n    elementTime = document.getElementById(`time`);\r\n    document.getElementById('resButton').onclick = doReset;\r\n    elementStart = document.getElementById(\"resButton\");\r\n};\r\n\r\nconst timer = createTimer(document.getElementById(`time`));\r\n\r\nconst done = [];\r\n\r\nconst showAlert = (token) => {\r\n    const { value } = token;\r\n\r\n    if (done.includes(value)) return;\r\n\r\n    if (tokenSelected === null){\r\n        console.log('You clicked', token);\r\n        tokenSelected = token; \r\n        token.setChosen();\r\n        return;\r\n    }\r\n\r\n    moves++;\r\n\r\n    if (tokenSelected === token){\r\n        tokenSelected = null;\r\n        token.setNormal();\r\n    }else{\r\n        if (tokenSelected.value === value){\r\n            console.log('Equal');\r\n            tokenSelected.setMatched();\r\n            token.setMatched();\r\n            let newLength = done.push(value);\r\n            tokenSelected = null;\r\n        }else{\r\n            console.log('Not equal');\r\n            token.setChosen();\r\n            setTimeout(() => {\r\n                tokenSelected.setNormal();\r\n                token.setNormal();\r\n                tokenSelected = null;\r\n            }, 2000);\r\n        }\r\n    }\r\n    elementTotal.innerText = moves;\r\n\r\n    if (done.length == pairCount) {\r\n        alert(`You won in ${moves} moves and spent ${timer.getSeconds()} seconds`);\r\n        timer.stop();\r\n    }\r\n}\r\n\r\nconst shuffle = (array) => {\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n\r\n    while (currentIndex != 0) {\r\n\r\n\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n\r\n       \r\n        [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n\r\n\r\nconst doReset = () => {\r\n    timer.stop();\r\n    elementTime.innerText = 0; \r\n    \r\n    Tokens.length = 0;\r\n\r\n    const pairCountInput = parseInt(document.getElementById(\"pairCount\").value);\r\n    \r\n    if (pairCountInput >= 1 && pairCountInput <= 50){\r\n        pairCount = pairCountInput;\r\n    }else{\r\n        pairCount = 10;\r\n        alert('Your number to big, invalid or you just didn`t enter it. Let`s try 10)')\r\n    }\r\n\r\n    \r\n    let i = 0;\r\n    let child = container.lastElementChild;\r\n\r\n    while (child) {\r\n        container.removeChild(child);\r\n        child = container.lastElementChild;\r\n    }\r\n\r\n    let colorCurrent = 51;\r\n\r\n    for (i = 0; i < pairCount*2; i++){\r\n        Tokens[i] = createToken(showAlert);\r\n        container.insertAdjacentElement('beforeend', Tokens[i].element);\r\n    }\r\n\r\n    shuffle(Tokens);\r\n\r\n    for (i = 0; i < pairCount; i ++) {\r\n        Tokens[i].setValue(colorCurrent);\r\n        Tokens[i + pairCount].setValue(colorCurrent);\r\n        colorCurrent += stepColor;\r\n        Tokens[i].setStarting();\r\n        Tokens[i + pairCount].setStarting();\r\n    }\r\n\r\n    setTimeout(() => {\r\n        for (const token of Tokens){ \r\n            token.setNormal(); \r\n        }\r\n        timer.start();\r\n    }, 3000);\r\n    moves = 0;\r\n    done.length = 0;\r\n    elementTotal.innerText = moves;\r\n    elementStart.innerText=\"Restart\"; \r\n    \r\n   \r\n}\r\n\r\ndocument.body.onload = init;\r\n"],"names":["protoToken","value","element","setValue","this","toString","padStart","setMatched","style","backgroundColor","borderColor","setNormal","setChosen","setStarting","createToken","onclick","token","Object","create","document","createElement","className","elementTotal","elementTime","elementStart","moves","tokenSelected","pairCount","Tokens","container","getElementById","stepColor","Math","floor","timer","interval","seconds","tick","innerText","start","clearInterval","setInterval","stop","getSeconds","createTimer","done","showAlert","includes","console","log","push","setTimeout","length","alert","doReset","pairCountInput","parseInt","i","child","lastElementChild","removeChild","colorCurrent","insertAdjacentElement","array","randomIndex","currentIndex","random","shuffle","body","onload"],"sourceRoot":""}